org 100h ;making it able to open teh programm as a .COM file

section .data

    backBufferSeg resw 1 ;reserving 16 bit storage for segments in the backbuffer
    xPos dw 160 ; initial X position
    yPos dw 100 ; initial Y position
    xVelocity dw 1 ; travel speed in pixels of the sprite on the X axis
    yVelocity dw 0 ; travel speed in pixels of the sprite on the Y axis

    Pacman db 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF
           db 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF
           db 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0x2C, 0x2C, 0x2C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
           db 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF
        ;pacman sprite

Section .text

mov ax, 0013h ; setting the video mode for 640x480 screen and getting 256 colors. screen can be expanded without problem
int 10

GameLoop: ;
mov al, 0FFh
call clearScreen

mov di, [xPos]
mov si, pacman
call printplayer
mov bx, [xPos]
add bx, [xVelocity]
mov word [xPos], bx

mov cx, 10000

WaitLoop:
loop WaitLoop
cmp word [xPos], 320-16
je ChangeVelocity
cmp word [xPos], 0
je ChangeVelocity
jmp GameLoop

clearScreen: ;this part of the programm will clean with a rapid speed
mov ax, [cs:backBufferSeg]; backbufferSeg is needed for making sure that the cleaning doesn't provoke flickering !
mov es, ax
mov di, 0
mov cx, 320*200
rep stosb
ret 

presentBackBuffer:
push ds
push es
mov ax, [cs:backBufferSeg]
mov ds, ax
mov ax, 0A000h
mov es, ax
xor si, si
xor di, di
mov cx, 320*200
rep movsb
op es
pop ds
ret

loopy5:
    mov cx, 16
    rep movsb
    add di, 640-16
    dec dx
    jnz loopy5
ret

printplayer:
    mov ax, [cs:backBufferSeg]
    mov es, ax
    mov dx, 16

    cld  ; Clear direction flag

    loopyy:
        mov cx, 16
        rep movsb
        add di, 320-16
        dec dx
        jnz loopyy
    ret


ChangeVelocity:
neg word [xVelocity]
jmp GameLoop

%include "seg.inc"

